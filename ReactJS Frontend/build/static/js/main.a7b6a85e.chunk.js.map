{"version":3,"sources":["Components/HomePage/undraw_media_player_ylg8.svg","Components/SingersPage/abdallah.jpg","Components/HomePage/abdallah.jpg","Components/NavBar/NavBar.js","Components/HomePage/HeaderSection.js","Components/HomePage/Section2.js","Components/HomePage/HomePage.js","Components/SingersPage/SingerHeader.js","Components/SingersPage/SingersList.js","Components/SingersPage/SingerPage.js","Components/AuthenticationService/AuthenticationService.js","Components/LoginPage/Login.js","Components/Error.js","Components/AuthenticatedRoute/AuthenticatedRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","class","className","position","id","exact","to","HeaderSection","Section2","style","textAlign","src","listentomusic","HomePage","SingerHeader","state","type","placeholder","value","Component","SingerBlock","ProfileImage","alt","SingersList","username","password","sessionStorage","setItem","removeItem","getItem","Login","handleChange","event","name","target","setState","prevState","handleSubmit","preventDefault","console","log","AuthenticationService","registerSuccessfulLogin","successLogedIn","onSubmit","this","onChange","onClick","logOut","Error","backgroundColor","AuthenticatedRoute","isUserLoggdedIn","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sIAAAA,EAAOC,QAAU,IAA0B,sD,mBCA3CD,EAAOC,QAAU,IAA0B,sC,sHCA3CD,EAAOC,QAAU,IAA0B,sC,oHCuB5BC,MAnBf,SAAgBC,GACZ,OACE,yBAAKC,MAAM,aAAaC,UAAWF,EAAMG,UAEvC,wBAAID,UAAU,UACZ,wBAAIE,GAAG,SAAQ,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,KAAlB,WACf,yBAAKJ,UAAU,UACf,4BAAI,kBAAC,IAAD,CAASI,GAAG,aAAZ,aACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,UAAZ,UACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,UAAZ,cAEJ,iC,MCUKC,MArBf,SAAuBP,GAEnB,OACI,kBAAC,WAAD,KACD,4BAAQI,GAAG,aAAaF,UAAU,wBAEhC,6BAAK,6BAEJ,6BAASE,GAAG,gBAAgBF,UAAU,oFAClC,wBAAIA,UAAU,aAAd,qBACA,uDACA,kBAAC,IAAD,CAASI,GAAG,WAAWF,GAAG,iBAAiBF,UAAU,QAArD,oB,iBCYCM,MAxBf,SAAkBR,GAEd,OACI,6BAASE,UAAU,iDAEhB,6BAEE,wBAAIO,MAAO,CAACC,UAAU,WAAtB,8BAA4D,6BAA5D,qBACA,oFACiD,6BADjD,wDAEqD,6BAFrD,qDAGkD,6BAHlD,0BASF,6BACE,yBAAKN,GAAG,gBAAgBF,UAAU,YAAaS,IAAKC,SCFlDC,MAbf,SAAkBb,GACd,OACI,kBAAC,WAAD,KACA,kBAAC,EAAD,CAAQG,SAAS,cACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,6BCiBOW,G,wDAxBX,WAAYd,GAAQ,IAAD,8BACf,gBACKe,MAAQ,GAFE,E,qDAQf,OACA,4BAAQX,GAAG,mBAAmBF,UAAU,kDACrC,8BACI,yBAAKE,GAAG,YAAYF,UAAU,4EAC5B,2BAAOE,GAAG,cAAcY,KAAK,OAAOC,YAAY,oBAChD,2BAAOf,UAAU,MAAME,GAAG,eAAeY,KAAK,SAASE,MAAM,kB,GAdnDC,c,iBCiC3B,SAASC,EAAYpB,GACjB,OACI,yBAAKI,GAAG,iBAAiBF,UAAU,gEAC/B,yBAAKE,GAAG,eAAeO,IAAKU,IAAcC,IAAI,kBAC9C,6BACA,wBAAIpB,UAAU,QAAd,mBAQGqB,M,kDA5CX,WAAYvB,GAAQ,IAAD,8BACf,gBACKe,MAAQ,GAFE,E,qDAQf,OACI,6BAASb,UAAU,mBAEf,yBAAKA,UAAU,qCACf,kBAACkB,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,Y,GAxBUD,a,GCADA,Y,OCkBV,M,gHAnBaK,EAAWC,GAC/BC,eAAeC,QAAQ,oBAAsBH,K,+BAM7CE,eAAeE,WAAW,uB,wCAM1B,OAAU,OADCF,eAAeG,QAAQ,yB,MCmD3BC,E,kDA7DX,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IASV+B,aAAe,SAACC,GACZ,IAAIC,EAAOD,EAAME,OAAOD,KACpBf,EAAQc,EAAME,OAAOhB,MACzB,EAAKiB,UACD,SAACC,GAEG,sBAESH,EAAOf,OAlBT,EA2BnBmB,aAAe,SAACL,GACZA,EAAMM,iBACNC,QAAQC,IAAI,EAAKzB,OACO,YAArB,EAAKA,MAAMS,UAA6C,SAArB,EAAKT,MAAMU,UAC9CgB,EAAsBC,wBAAwB,EAAK3B,MAAMS,SAAW,EAAKT,MAAMU,WA7BlF,EAAKV,MAAQ,CACTS,SAAS,GACTC,SAAS,GACTkB,gBAAe,GALJ,E,qDA2Cf,OACI,oCAEA,0BAAMC,SAAUC,KAAKR,cACjB,2BAAOrB,KAAK,OAAOiB,KAAK,WAAWf,MAAO2B,KAAK9B,MAAMS,SAAUsB,SAAUD,KAAKd,eAC9E,2BAAOf,KAAK,OAAOiB,KAAK,WAAWf,MAAO2B,KAAK9B,MAAMU,SAAUqB,SAAUD,KAAKd,eAC9E,2BAAOf,KAAK,SAASE,MAAM,WAG/B,4BAAQ6B,QAASN,EAAsBO,QAAvC,e,GArDQ7B,aCQL8B,MATf,SAAejD,GACX,OACI,yBAAKS,MAAO,CAACyC,gBAAgB,QACzB,iDCYGC,E,uKAVP,OAAGV,EAAsBW,kBACf,kBAAC,IAAUP,KAAK7C,OAIhB,kBAAC,IAAD,CAAUM,GAAG,c,GAPEa,aCsBlBkC,MAlBf,WACE,OACE,yBAAKnD,UAAU,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,OAAK,EAACiD,KAAK,IAAIC,UAAW1C,IACjC,kBAAC,IAAD,CAAOyC,KAAK,SAASC,UAAWzB,IAChC,kBAAC,IAAD,CAAOyB,UAAWN,IAClB,kBAAC,EAAD,CAAoBK,KAAK,SAASC,UAAWzB,QCNjC0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,c","file":"static/js/main.a7b6a85e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_media_player_ylg8.815c0246.svg\";","module.exports = __webpack_public_path__ + \"static/media/abdallah.a991c213.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abdallah.a991c213.jpg\";","import React from 'react'\nimport {NavLink} from 'react-router-dom';\nimport \"./NavBar.css\";\n\nfunction NavBar(props) {\n    return(\n      <nav class=\"wrapingNav\" className={props.position}>\n        \n        <ul className=\"NavBar\">\n          <li id=\"brand\"><NavLink exact to=\"/\">Musica</NavLink></li>\n          <div className=\"d-flex\">\n          <li><NavLink to=\"/Register\">Register</NavLink></li>\n          <li><NavLink to=\"/Login\">Login</NavLink></li>\n          <li><NavLink to=\"/About\">About us</NavLink></li>\n          </div>\n          <div></div>\n         \n        </ul>\n      </nav>\n    )\n}\n\n\nexport default NavBar;","import React, { Fragment } from 'react';\nimport \"./HomePage.css\";\nimport { NavLink } from 'react-router-dom';\n\nfunction HeaderSection(props) {\n\n    return(\n        <Fragment>\n       <header id=\"background\" className=\"container-fluid pt-5\">\n        \n         <br/><br/>\n         \n          <article id=\"headerArticle\" className=\"d-flex flex-column justify-content-center align-items-center flex-wrap pt-5 pb-5\">\n              <h1 className=\"display-3\">Welcome To Musica</h1>\n              <h3>The only truth is music</h3>\n              <NavLink to=\"Register\" id=\"registerButton\" className=\"mt-4\">Register Now</NavLink>\n          </article>\n\n      </header>\n\n     \n       </Fragment>\n    )\n}\n\nexport default HeaderSection;","import React from 'react';\nimport listentomusic from './undraw_media_player_ylg8.svg';\n\nfunction Section2(props) {\n    \n    return(\n        <section className=\"d-flex justify-content-around   flex-wrap sec\">\n           \n           <div>\n\n             <h2 style={{textAlign:'center'}}>More likes. More playlists.<br/>All in one place.</h2>\n             <p>\n             The tracks youâ€™ve liked and discovered, and your <br/>\n             favorite playlists can all be found in your Library. <br/>\n             Which means you can listen to what you love again <br/>\n             and again. And again.\n            </p>\n          \n           </div>\n\n           <div>\n             <img id=\"listentomusic\" className=\"img-fluid\"  src={listentomusic} />\n           </div>\n        </section>\n\n    )\n}\nexport default Section2;","import React, { Fragment } from 'react';\nimport \"./HomePage.css\";\nimport NavBar from '../NavBar/NavBar';\nimport prof from \"./abdallah.jpg\"\nimport HeaderSection from './HeaderSection';\nimport Section2 from './Section2';\nfunction HomePage(props) {\n    return(\n        <Fragment>\n        <NavBar position=\"fixed-top\"/>\n        <HeaderSection/>\n        <Section2/>\n       \n\n       </Fragment>\n\n    )\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport \"./SingerPage.css\";\n\nclass SingerHeader extends Component {\n    constructor(props) {\n        super()\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return(\n        <header id=\"SingerPageHeader\" className=\" d-flex justify-content-center align-items-end\">\n           <form>\n               <div id=\"searchDiv\" className=\"d-flex flex-column input-group justify-content-center align-items-center\"> \n                 <input id=\"searchInput\" type=\"text\" placeholder=\"Search a singer\"/>\n                 <input className=\"btn\" id=\"searchButton\" type=\"submit\" value=\"Search\" />\n               </div>\n               \n\n           </form>\n        </header>\n    \n        )\n    }\n}\n\nexport default SingerHeader;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport ProfileImage from './abdallah.jpg';\n\nclass SingersList extends Component {\n    constructor(props) {\n        super()\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return(\n            <section className=\"container-fluid\">\n                \n                <div className=\"row d-flex justify-content-around\">\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                <SingerBlock/>\n                </div>\n\n            </section>\n        )\n    }\n}\n\nfunction SingerBlock(props) {\n    return(\n        <div id=\"singerBlockDiv\" className=\"d-flex flex-column justify-content-center align-items-center\">\n            <img id=\"profileImage\" src={ProfileImage} alt=\"profile image\" />\n            <br/>\n            <h4 className=\"mb-4\">Mustafa Ceceli</h4>\n        </div>\n    )\n}\n\n\n\n\nexport default SingersList;","import React, { Component, Fragment } from 'react';\nimport \"./SingerPage.css\";\nimport SingerHeader from './SingerHeader';\nimport SingersList from './SingersList';\nclass SingerPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state =  {\n\n        }\n    }\n\n    render() {\n        return(\n          <div id=\"singerContainer\">\n            <SingerHeader/>\n            <SingersList/>\n            </div>\n        )\n\n    }\n}\n\nexport default SingerPage;","class AuthenticationService {\n\n    //store the session\n    registerSuccessfulLogin(username , password) {\n        sessionStorage.setItem(\"authenticatedUser\" , username);\n\n    }\n\n    //remove the session\n    logOut() {\n        sessionStorage.removeItem(\"authenticatedUser\");\n    }\n\n    //maybe some time i want to show somthing based if that user logged in or not\n    isUserLoggdedIn () {\n        let user = sessionStorage.getItem(\"authenticatedUser\");\n        if(user===null) return false;\n        return true;\n    }\n\n}\n\nexport default new  AuthenticationService();","import React , {Component} from 'react';\nimport AuthenticationService from '../AuthenticationService/AuthenticationService';\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username:'' , \n            password:'' , \n            successLogedIn:false\n\n        }    \n    }\n\n    handleChange = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        this.setState(\n            (prevState) => {\n                \n                return(\n                    {\n                        [name]: value\n                    }\n                )\n\n        });\n        \n\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state)\n        if(this.state.username==\"Abdallah\" && this.state.password==\"12345\") {\n           AuthenticationService.registerSuccessfulLogin(this.state.username , this.state.password)\n        }\n        else {\n        \n        }\n            \n\n    }\n\n    \n\n    render() {\n        return(\n            <>\n               \n            <form onSubmit={this.handleSubmit} > \n                <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                <input type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                <input type=\"submit\" value=\"Login\"/>\n                \n            </form>\n            <button onClick={AuthenticationService.logOut}>Logout</button>\n\n           </>\n        )\n       \n\n    }\n}\n\nexport default Login;","import React from 'react';\n\n\nfunction Error(props) {\n    return(\n        <div style={{backgroundColor:'red'}}>\n            <h1>An Error Occurd</h1>\n        </div>\n    )\n\n}\n\nexport default Error;","import React, { Component } from 'react';\nimport { Redirect , Route } from 'react-router-dom';\nimport AuthenticationService from '../AuthenticationService/AuthenticationService';\n\n\n/* we use the authenticated route when we 'don't' want to show a page withou Log in by typing the url */\nclass AuthenticatedRoute extends Component {\n    render() {\n        if(AuthenticationService.isUserLoggdedIn()) {\n           return <Route {...this.props} ></Route> //... is the Spread syntax // ...this.props means take all the props and spread out \n\n        }\n        else {\n           return <Redirect to=\"Login\"/>\n        }\n    }\n}\n\nexport default AuthenticatedRoute;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './Components/HomePage/HomePage';\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport SingerPage from './Components/SingersPage/SingerPage';\nimport Login from './Components/LoginPage/Login';\nimport Error from './Components/Error';\nimport AuthenticatedRoute from './Components/AuthenticatedRoute/AuthenticatedRoute';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage}></Route>\n        <Route path=\"/Login\" component={Login}></Route>\n        <Route component={Error} ></Route>\n        <AuthenticatedRoute path=\"/Logut\" component={Login}  ></AuthenticatedRoute>\n      </Switch>\n    </Router>\n\n    \n     \n     </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}